FROM ubuntu:focal-20210609

ENV GOSU_URL https://github.com/tianon/gosu/releases/download/1.11/gosu

# change sh from, possibly, dash to bash
RUN cd /bin && rm sh && ln -s bash sh

# creating user with matching host id on the fly magic
RUN echo ""
COPY entrypoint.sh /usr/local/bin/entrypoint.sh
RUN chmod +x /usr/local/bin/entrypoint.sh

# apt
RUN apt-get update -y

RUN DEBIAN_FRONTEND=noninteractive apt-get install -y \
    ca-certificates \
    curl \
    gpg \
    gosu

RUN mkdir ~/.gnupg
RUN echo "disable-ipv6" >> ~/.gnupg/dirmngr.conf
#RUN gpg --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4
#RUN curl -o /usr/local/bin/gosu -SL "$GOSU_URL-$(dpkg --print-architecture)"
#RUN curl -o /usr/local/bin/gosu.asc -SL "$GOSU_URL-$(dpkg --print-architecture).asc"
#RUN gpg --verify /usr/local/bin/gosu.asc
#RUN rm /usr/local/bin/gosu.asc
#RUN chmod +x /usr/local/bin/gosu
RUN chmod +x /usr/local/bin/entrypoint.sh
# end of creating user with matching host id on the fly magic

RUN DEBIAN_FRONTEND=noninteractive apt-get install -y \
	bash-completion sudo \
	wget \
	libpython2.7 \
	libncurses5 \
	gdb-multiarch

RUN DEBIAN_FRONTEND=noninteractive apt-get install -y \
	vim nano net-tools iputils-ping ssh openjdk-8-jdk \
	flex bison zlib1g-dev ncurses-dev gettext autoconf libxml2-dev xutils-dev time tclsh tcl \
	build-essential cvs unifdef libc6-i386 \
	libcppunit-dev intltool gtk-doc-tools libglib2.0-dev sqlite3 gawk zip \
	lib32stdc++6 help2man rsync cmake groff-base libcrypt1:i386

RUN DEBIAN_FRONTEND=noninteractive apt-get install -y \
	python3 python3-pip \
	ipython3 \
	python2.7 \
	python-dev \
	python3-dev \
	vim \
	git \
	subversion \
	git-svn \
	mercurial \
	cvs \
	dnsutils
	
RUN DEBIAN_FRONTEND=noninteractive apt-get install -y \
	ffmpeg \
	libsm6 \
	libxext6 \
	traceroute \
	libpcap-dev \
	tcpdump \
	php \
	arcanist
	
RUN ln -s /usr/bin/python3 /usr/bin/python
RUN ln -s /usr/bin/python2.7 /usr/bin/python2

RUN python3 -m pip install -U pip

RUN python3 -m pip check

# cleanup apt data
RUN apt remove --autoremove
RUN rm -rf /var/lib/apt/lists/*

RUN echo "export PATH=/home/docker/.local/bin/:${PATH}" >> /etc/bash.bashrc

ENV EXPORT_DIR /export
#VOLUME ["$EXPORT_DIR"]
WORKDIR $EXPORT_DIR

ENTRYPOINT ["/usr/local/bin/entrypoint.sh"]

# docker run --rm -it --name gdb -e uid=`id -u` -v`pwd`:/export zmart/gdb_march_ubuntu_18.04 /bin/bash
